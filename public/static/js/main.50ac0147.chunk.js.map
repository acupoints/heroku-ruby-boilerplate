{"version":3,"sources":["flux-redux/constants/index.js","components/CountButton.jsx","flux-redux/actions/index.js","components/CountNum.jsx","components/Pages.jsx","components/PagesNavigator.jsx","components/PagesNotFound.jsx","components/AstronautsButton.jsx","components/D3Card.jsx","App.js","serviceWorker.js","flux-redux/reducers/spinnerReducer.js","flux-redux/reducers/astronautsReducer.js","flux-redux/reducers/index.js","flux-redux/store/index.js","index.js"],"names":["constants","ADD_NUM","REDUCE_NUM","ADD_ASTRONAUTS_FETCH_START","ADD_ASTRONAUTS_FETCH_SUCCESS","ADD_ASTRONAUTS_FETCH_FAUILE","connect","dispatch","sendAdd","num","type","C","payload","addAction","sendReduce","reduceAction","props","onClick","state","spinnerReducer","count","Home","className","About","Events","Products","Contact","PagesNavigator","to","PagesNotFound","location","pathname","AstronautsButton","handleOnClick","bind","this","fetchAstronauts","astronauts","pending","error","astronauts_els","JSON","stringify","Component","astronautsReducer","data","email","password","data_body","Object","keys","map","key","encodeURIComponent","join","console","log","fetch","method","mode","headers","body","then","response","a","catch","D3Card","myRef","React","createRef","dataset","svg","d3","current","append","attr","selectAll","enter","d","i","ref","window","App","exact","path","component","Boolean","hostname","match","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.50ac0147.chunk.js","sourcesContent":["const constants = {\r\n    ADD_NUM: \"ADD_NUM\",\r\n    REDUCE_NUM: \"REDUCE_NUM\",\r\n    // Fetch Astronauts\r\n    ADD_ASTRONAUTS_FETCH_START: \"ADD_ASTRONAUTS_FETCH_START\",\r\n    ADD_ASTRONAUTS_FETCH_SUCCESS: \"ADD_ASTRONAUTS_FETCH_SUCCESS\",\r\n    ADD_ASTRONAUTS_FETCH_FAUILE: \"ADD_ASTRONAUTS_FETCH_FAUILE\",\r\n}\r\n\r\nexport default constants","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addAction, reduceAction } from '../flux-redux/actions'\r\n\r\n// export default \r\nfunction CountButton (props) {\r\n    const addTen = () => {\r\n        props.sendAdd(10)\r\n    }\r\n    const reduceTwo = () => {\r\n        props.sendReduce(2)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={addTen}>+10</button>\r\n            <button onClick={reduceTwo}>-2</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n//\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendAdd: (num) => {\r\n            dispatch(addAction(num))\r\n        },\r\n        sendReduce: (num) => {\r\n            dispatch(reduceAction(num))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CountButton)\r\n","import C from '../constants'\r\nimport fetch from 'isomorphic-fetch'\r\n// import axios from 'axios'\r\n\r\nexport const addAction = (num) => {\r\n    return {\r\n        type: C.ADD_NUM,\r\n        payload: {\r\n            num\r\n        }\r\n    }\r\n}\r\n\r\nexport const reduceAction = (num) => {\r\n    return {\r\n        type: C.REDUCE_NUM,\r\n        payload: {\r\n            num\r\n        }\r\n    }\r\n}\r\n\r\n//\r\nexport const fetchAstronautsAction = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: C.ADD_ASTRONAUTS_FETCH_START})\r\n        const data = {\r\n            email: \"admin@qq.com\",\r\n            password: \"Umph2014$@\",\r\n        }\r\n        let data_body = Object.keys(data).map(\r\n            key => encodeURIComponent(key)+'='+encodeURIComponent(data[key])).join('&')\r\n        console.log(data_body)\r\n        // let formData = new FormData()\r\n        // formData.append('email', 'user2@gmail.com')\r\n        // formData.append('password', 'Umph2014$@')\r\n        // fetch(`http://api.open-notify.org/astros.json`\r\n        // fetch('api/auth/login'\r\n        fetch('https://hub.fy1m.net/auth/login', {\r\n                    method: 'POST',\r\n                    // mode: \"no-cors\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        'Content-Type': \"application/x-www-form-urlencoded\",\r\n                        // 'Content-Type': \"application/json\",\r\n                    },\r\n                    body: data_body,\r\n                    // body: JSON.stringify(data),\r\n                    // body: formData,\r\n                }\r\n            )\r\n            .then(async response => {\r\n                console.log(\"response: \",response)\r\n                return response\r\n            })\r\n            .then(response => {\r\n                if (response.error) {\r\n                    throw(response.error)\r\n                }\r\n                dispatch({type: C.ADD_ASTRONAUTS_FETCH_SUCCESS, astronauts: response})\r\n                return response\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({type: C.ADD_ASTRONAUTS_FETCH_FAUILE, error: JSON.stringify(error)})\r\n            })\r\n            \r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// export default \r\nfunction CountNum (props) {\r\n    return (\r\n        <div>{props.count}</div>\r\n    )\r\n}\r\n\r\n//\r\nconst mapStateToProps = state => {\r\n    return state.spinnerReducer\r\n}\r\n\r\nexport default connect(mapStateToProps)(CountNum)\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <section className=\"home\">\r\n            <h1>[Home Page]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const About = () => {\r\n    return (\r\n        <section className=\"about\">\r\n            <h1>[About the Company]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <section className=\"events\">\r\n            <h1>[Events Calendar]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Products = () => {\r\n    return (\r\n        <section className=\"products\">\r\n            <h1>[Products Catalog]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <section className=\"contact\">\r\n            <h1>[Contact Us]</h1>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PagesNavigator = () => {\r\n    return (\r\n        <div className=\"pagesnavigator\">\r\n            <nav>\r\n                <Link to=\"/\">[Home]</Link>\r\n                <Link to=\"about\">[About]</Link>\r\n                <Link to=\"events\">[Events]</Link>\r\n                <Link to=\"products\">[Products]</Link>\r\n                <Link to=\"contact\">[Contact]</Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const PagesNotFound = ({location}) => {\r\n    return (\r\n        <section className=\"pagesnotfound\">\r\n            <h1>Resource not found at '{location.pathname}'</h1>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchAstronautsAction } from '../flux-redux/actions'\r\n\r\nclass AstronautsButton extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.handleOnClick = this.handleOnClick.bind(this)\r\n    }\r\n    \r\n    handleOnClick () {\r\n        this.props.fetchAstronauts()\r\n    }\r\n\r\n    render () {\r\n        const { astronauts, pending, error } = this.props\r\n        // let astronauts_els = astronauts.map(el => <li key={el.name}>{el.name}</li>)\r\n        let astronauts_els = JSON.stringify(astronauts)\r\n        return (\r\n            <div className=\"Astro\">\r\n                <button onClick={this.handleOnClick}>Fetch Astro</button>\r\n                <h1>{pending? 'loading...': ''}</h1>\r\n                {pending||astronauts_els}\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//\r\nconst mapStateToProps = state => {\r\n    return state.astronautsReducer\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAstronauts: () => {\r\n            dispatch(fetchAstronautsAction())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AstronautsButton)\r\n","import React, { Component } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nclass D3Card extends Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.myRef = React.createRef()\r\n        //\r\n        this.dataset = [35, 20, 30, 15, 50]\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.myRef)\r\n        //\r\n        // d3.select(this.myRef.current)\r\n        //     .append('p')\r\n        //     .text('Hello from D3')\r\n        let size = 75\r\n        let svg = d3.select(this.myRef.current)\r\n            .append('svg')\r\n            .attr('width', size)\r\n            .attr('height', size)\r\n        //\r\n        let rect_width = 10\r\n        svg.selectAll('rect')\r\n            .data(this.dataset)\r\n            .enter()\r\n            .append('rect')\r\n            .attr('x', (d, i) => 2.5 + i * (rect_width + 5))\r\n            .attr('y', d => size - d)\r\n            .attr('width', rect_width)\r\n            .attr('height', d => d)\r\n            .attr('fill', 'teal')\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.myRef}></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default D3Card\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n//\r\nimport CountButton from './components/CountButton'\r\nimport CountNum from './components/CountNum'\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport {\r\n  Home,\r\n  About,\r\n  Events,\r\n  Products,\r\n  Contact\r\n} from './components/Pages'\r\n\r\nimport { PagesNavigator } from './components/PagesNavigator'\r\nimport { PagesNotFound } from './components/PagesNotFound'\r\n\r\nimport AstronautsButton from './components/AstronautsButton'\r\nimport D3Card from './components/D3Card'\r\n\r\nwindow.React = React\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </header> */}\r\n      <CountButton />\r\n      <CountNum />\r\n      <BrowserRouter>\r\n        <PagesNavigator />\r\n        <div className=\"main\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/events\" component={Events} />\r\n            <Route path=\"/products\" component={Products} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route component={PagesNotFound} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n      <AstronautsButton />\r\n      <D3Card />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import C from '../constants'\r\n\r\nconst initialState = {\r\n    count: 0\r\n}\r\n\r\nexport const spinnerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case C.ADD_NUM:\r\n            return {\r\n                ...state,\r\n                count: state.count + action.payload.num\r\n            }\r\n        case C.REDUCE_NUM:\r\n            return {\r\n                ...state,\r\n                count: state.count - action.payload.num\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants'\r\n\r\nconst initialState = {\r\n    astronauts: [],\r\n    pending: false,\r\n    error: null,\r\n}\r\n\r\nexport const astronautsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case C.ADD_ASTRONAUTS_FETCH_START:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n            }\r\n        case C.ADD_ASTRONAUTS_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                astronauts: action.astronauts,\r\n                pending: false,\r\n            }\r\n        case C.ADD_ASTRONAUTS_FETCH_FAUILE:\r\n            return {\r\n                ...state,\r\n                astronauts: action.astronauts,\r\n                pending: false,\r\n                error: action.error,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { spinnerReducer } from './spinnerReducer'\r\nimport { astronautsReducer } from './astronautsReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    spinnerReducer,\r\n    astronautsReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunk,\r\n        logger\r\n    )\r\n)\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//\r\nimport store from './flux-redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}