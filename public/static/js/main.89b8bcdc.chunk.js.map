{"version":3,"sources":["components/ui/SlyButton.jsx","components/ui/SlyHeader.jsx","components/ui/SlyBanner.jsx","components/Pages.jsx","flux-redux/constants/index.js","components/AstronautsButton.jsx","flux-redux/actions/index.js","components/ui/SlyPageLogin.jsx","components/ui/SlyPageSignup.jsx","components/PagesNavigator.jsx","components/PagesNotFound.jsx","components/D3Card.jsx","App.js","serviceWorker.js","flux-redux/reducers/spinnerReducer.js","flux-redux/reducers/astronautsReducer.js","flux-redux/reducers/index.js","flux-redux/store/index.js","index.js"],"names":["SlyButton","text","this","props","className","href","Component","defaultProps","SlyHeader","SlyBanner","Home","About","Events","Products","Contact","constants","ADD_NUM","REDUCE_NUM","ADD_ASTRONAUTS_FETCH_START","ADD_ASTRONAUTS_FETCH_SUCCESS","ADD_ASTRONAUTS_FETCH_FAUILE","AstronautsButton","handleOnClick","bind","fetchAstronauts","astronauts","pending","error","astronauts_els","JSON","stringify","onClick","connect","state","astronautsReducer","dispatch","type","C","data","email","password","data_body","Object","keys","map","key","encodeURIComponent","join","console","log","fetch","method","mode","credentials","headers","body","then","response","a","ok","json","token","catch","SlyPageLogin","SlyPageSignup","PagesNavigator","to","PagesNotFound","location","pathname","D3Card","myRef","React","createRef","dataset","svg","d3","current","append","attr","selectAll","enter","d","i","ref","window","App","exact","path","component","Boolean","hostname","match","initialState","count","rootReducer","combineReducers","spinnerReducer","action","payload","num","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.89b8bcdc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './SlyButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass SlyButton extends Component {\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n\r\n    render () {\r\n        const { text } = this.props\r\n        return (\r\n            <div className=\"sly-button-container\">\r\n                <a href=\"/\" className=\"sly-button\">{text}</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//\r\nSlyButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n}\r\n\r\nSlyButton.defaultProps = {\r\n    text: \"Sign up\"\r\n}\r\n\r\n\r\nexport default SlyButton\r\n","import React, { Component } from 'react'\r\nimport './SlyHeader.css'\r\n//\r\nimport SlyButton from './SlyButton'\r\n\r\nclass SlyHeader extends Component {\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sly-header-container\">\r\n                <SlyButton text=\"Log in\" />\r\n                <SlyButton text=\"Get started\" />\r\n                <SlyButton />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlyHeader\r\n","import React, { Component } from 'react'\r\nimport './SlyBanner.css'\r\n\r\nclass SlyBanner extends Component {\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sly-banner-container\">\r\n                banner\r\n                <a href=\"/\" className=\"sly-notice-close\">x</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlyBanner\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <section className=\"home\">\r\n            <h1>[Home Page]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const About = () => {\r\n    return (\r\n        <section className=\"about\">\r\n            <h1>[About the Company]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Events = () => {\r\n    return (\r\n        <section className=\"events\">\r\n            <h1>[Events Calendar]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Products = () => {\r\n    return (\r\n        <section className=\"products\">\r\n            <h1>[Products Catalog]</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <section className=\"contact\">\r\n            <h1>[Contact Us]</h1>\r\n        </section>\r\n    )\r\n}","const constants = {\r\n    ADD_NUM: \"ADD_NUM\",\r\n    REDUCE_NUM: \"REDUCE_NUM\",\r\n    // Fetch Astronauts\r\n    ADD_ASTRONAUTS_FETCH_START: \"ADD_ASTRONAUTS_FETCH_START\",\r\n    ADD_ASTRONAUTS_FETCH_SUCCESS: \"ADD_ASTRONAUTS_FETCH_SUCCESS\",\r\n    ADD_ASTRONAUTS_FETCH_FAUILE: \"ADD_ASTRONAUTS_FETCH_FAUILE\",\r\n}\r\n\r\nexport default constants","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchAstronautsAction } from '../flux-redux/actions'\r\n\r\nclass AstronautsButton extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.handleOnClick = this.handleOnClick.bind(this)\r\n    }\r\n    \r\n    handleOnClick () {\r\n        this.props.fetchAstronauts()\r\n    }\r\n\r\n    render () {\r\n        const { astronauts, pending, error } = this.props\r\n        // let astronauts_els = astronauts.map(el => <li key={el.name}>{el.name}</li>)\r\n        let astronauts_els = JSON.stringify(astronauts)\r\n        return (\r\n            <div className=\"Astro\">\r\n                <button onClick={this.handleOnClick}>Fetch Astro</button>\r\n                <h1>{pending? 'loading...': ''}</h1>\r\n                {pending||astronauts_els}\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//\r\nconst mapStateToProps = state => {\r\n    return state.astronautsReducer\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAstronauts: () => {\r\n            dispatch(fetchAstronautsAction())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AstronautsButton)\r\n","import C from '../constants'\r\nimport fetch from 'isomorphic-fetch'\r\n// import axios from 'axios'\r\n\r\nexport const addAction = (num) => {\r\n    return {\r\n        type: C.ADD_NUM,\r\n        payload: {\r\n            num\r\n        }\r\n    }\r\n}\r\n\r\nexport const reduceAction = (num) => {\r\n    return {\r\n        type: C.REDUCE_NUM,\r\n        payload: {\r\n            num\r\n        }\r\n    }\r\n}\r\n\r\n//\r\nexport const fetchAstronautsAction = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: C.ADD_ASTRONAUTS_FETCH_START})\r\n        const data = {\r\n            email: \"admin@qq.com\",\r\n            password: \"Umph2014$@\",\r\n        }\r\n        let data_body = Object.keys(data).map(\r\n            key => encodeURIComponent(key)+'='+encodeURIComponent(data[key])).join('&')\r\n        console.log(data_body)\r\n        // let formData = new FormData()\r\n        // formData.append('email', 'user2@gmail.com')\r\n        // formData.append('password', 'Umph2014$@')\r\n\r\n        // fetch(`http://api.open-notify.org/astros.json`\r\n        fetch('/auth/login', {\r\n                    method: 'POST',\r\n                    mode: \"cors\",\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        'Content-Type': \"application/x-www-form-urlencoded\",\r\n                        // 'Content-Type': \"application/json\",\r\n                    },\r\n                    body: data_body,\r\n                    // body: JSON.stringify(data),\r\n                    // body: formData,\r\n                }\r\n            )\r\n            .then(async response => {\r\n                // console.log(\"response: \",response)\r\n                if (response.ok) {\r\n                    console.log('--ok', response)\r\n                } else {\r\n                    console.log('--error', response)\r\n                    throw(response.error)\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(response => {\r\n                if (response.error) {\r\n                    throw(response.error)\r\n                }\r\n                dispatch({type: C.ADD_ASTRONAUTS_FETCH_SUCCESS, astronauts: response.token})\r\n                return response\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({type: C.ADD_ASTRONAUTS_FETCH_FAUILE, error: JSON.stringify(error)})\r\n            })\r\n            \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './SlyPageLogin.css'\r\n//\r\nimport AstronautsButton from '../AstronautsButton'\r\n\r\nclass SlyPageLogin extends Component {\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sly-page-login-container\">\r\n                <h1>[SlyPageLogin]</h1>\r\n                <AstronautsButton />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlyPageLogin\r\n","import React, { Component } from 'react'\r\nimport './SlyPageSignup.css'\r\n//\r\n\r\nclass SlyPageSignup extends Component {\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sly-page-signup-container\">\r\n                <h1>[SlyPageSignup]</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlyPageSignup\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PagesNavigator = () => {\r\n    return (\r\n        <div className=\"pagesnavigator\">\r\n            <nav>\r\n                <Link to=\"/\">[Home]</Link>\r\n                <Link to=\"/about\">[About]</Link>\r\n                <Link to=\"/events\">[Events]</Link>\r\n                <Link to=\"/products\">[Products]</Link>\r\n                <Link to=\"/contact\">[Contact]</Link>\r\n                <Link to=\"/users/login\">[Log in]</Link>\r\n                <Link to=\"/users/signup\">[Sign up]</Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const PagesNotFound = ({location}) => {\r\n    return (\r\n        <section className=\"pagesnotfound\">\r\n            <h1>Resource not found at '{location.pathname}'</h1>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nclass D3Card extends Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.myRef = React.createRef()\r\n        //\r\n        this.dataset = [35, 20, 30, 15, 50]\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.myRef)\r\n        //\r\n        // d3.select(this.myRef.current)\r\n        //     .append('p')\r\n        //     .text('Hello from D3')\r\n        let size = 75\r\n        let svg = d3.select(this.myRef.current)\r\n            .append('svg')\r\n            .attr('width', size)\r\n            .attr('height', size)\r\n        //\r\n        let rect_width = 10\r\n        svg.selectAll('rect')\r\n            .data(this.dataset)\r\n            .enter()\r\n            .append('rect')\r\n            .attr('x', (d, i) => 2.5 + i * (rect_width + 5))\r\n            .attr('y', d => size - d)\r\n            .attr('width', rect_width)\r\n            .attr('height', d => d)\r\n            .attr('fill', 'teal')\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.myRef}></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default D3Card\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n//\r\nimport './components/ui/styles.css'\r\nimport SlyHeader from './components/ui/SlyHeader'\r\nimport SlyBanner from './components/ui/SlyBanner'\r\n//\r\n// import CountButton from './components/CountButton'\r\n// import CountNum from './components/CountNum'\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport {\r\n  Home,\r\n  About,\r\n  Events,\r\n  Products,\r\n  Contact\r\n} from './components/Pages'\r\nimport SlyPageLogin from './components/ui/SlyPageLogin'\r\nimport SlyPageSignup from './components/ui/SlyPageSignup'\r\n\r\nimport { PagesNavigator } from './components/PagesNavigator'\r\nimport { PagesNotFound } from './components/PagesNotFound'\r\n\r\n// import AstronautsButton from './components/AstronautsButton'\r\nimport D3Card from './components/D3Card'\r\n\r\nwindow.React = React\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </header> */}\r\n      <SlyHeader />\r\n      {/* <CountButton />\r\n      <CountNum /> */}\r\n      <BrowserRouter>\r\n        <PagesNavigator />\r\n        <div className=\"main\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/events\" component={Events} />\r\n            <Route path=\"/products\" component={Products} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/users/login\" component={SlyPageLogin} />\r\n            <Route path=\"/users/signup\" component={SlyPageSignup} />\r\n            <Route component={PagesNotFound} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n      {/* <AstronautsButton /> */}\r\n      <D3Card />\r\n      \r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n\r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n      <D3Card />\r\n\r\n      <SlyBanner />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import C from '../constants'\r\n\r\nconst initialState = {\r\n    count: 0\r\n}\r\n\r\nexport const spinnerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case C.ADD_NUM:\r\n            return {\r\n                ...state,\r\n                count: state.count + action.payload.num\r\n            }\r\n        case C.REDUCE_NUM:\r\n            return {\r\n                ...state,\r\n                count: state.count - action.payload.num\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants'\r\n\r\nconst initialState = {\r\n    astronauts: [],\r\n    pending: false,\r\n    error: null,\r\n}\r\n\r\nexport const astronautsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case C.ADD_ASTRONAUTS_FETCH_START:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n            }\r\n        case C.ADD_ASTRONAUTS_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                astronauts: action.astronauts,\r\n                pending: false,\r\n            }\r\n        case C.ADD_ASTRONAUTS_FETCH_FAUILE:\r\n            return {\r\n                ...state,\r\n                astronauts: action.astronauts,\r\n                pending: false,\r\n                error: action.error,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { spinnerReducer } from './spinnerReducer'\r\nimport { astronautsReducer } from './astronautsReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    spinnerReducer,\r\n    astronautsReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunk,\r\n        logger\r\n    )\r\n)\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//\r\nimport store from './flux-redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}